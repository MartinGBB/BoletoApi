// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoletoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428063526_ResetDatabase")]
    partial class ResetDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Nome");

                    b.Property<decimal>("PercentualJuros")
                        .HasColumnType("numeric")
                        .HasColumnName("PercentualJuros");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Boleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("integer")
                        .HasColumnName("BancoId");

                    b.Property<string>("CpfCnpjBeneficiario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CpfCnpjBeneficiario");

                    b.Property<string>("CpfCnpjPagador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CpfCnpjPagador");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataVencimento");

                    b.Property<string>("NomeBeneficiario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NomeBeneficiario");

                    b.Property<string>("NomePagador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NomePagador");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Observacao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("Boleto");
                });

            modelBuilder.Entity("Boleto", b =>
                {
                    b.HasOne("Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");
                });
#pragma warning restore 612, 618
        }
    }
}
